Today:

Part I Reflections on the original proposal
a. project is described and clearly tied to community service or career opportunities
b. project goals: what they were, how they were / were not met
The project involves modeling a software cache in hardware.  This is a skill and a learning experience that will be really useful when I am getting a job or even just in college classes.
My goals for this project were to complete it successfully, learning about computer hardware, caches and programming implementations of hardware.  I think I've accomplished these goals, since I have completed it, I am standing here alive today, and I have certainly learned a lot.

Part II Overarching lessons
a. largest lesson learned
b. personal strength and challenge identified during this project
c. how the opportunity affects vision of studentsâ€™ future
d. does / does not recommend this site for future seniors.
My largest lesson learned was that coding is doable, and I have the tools and skills to do it.  I know now what real-life programming is all about, and it certainly takes practice but is well within people's grasp.

I've discovered that I was certainly able to easily do many parts of the project, but other parts were not quite so simple.  Interestingly, which parts fell into which categories was not what I might have expected at first.  I expected that the programming would be more challenging than simply understanding the question, which I was sadly mistaken about (luckily the errors I made were easy to fix).

This opportunity has really shaped what I hope my future looks like.  I understand that I want my life to involve programming, in some way, shape or form.

I would definitely recommend this job or a job like this to any senior who is interested in programming.  Mr. Hirano was a great teacher, and he taught me a lot about caches and programming in general.  Unfortunately, I don't think he's willing to take any more senior projects on, since I was probably enough for a lifetime

Part III Mechanics of the presentation
a. required presentation materials used are organized, correct, and used effectively
b. delivery was polished, within the 10 -15 minute time limit; presenter is poised and at ease in front of the audience
c. presentation is well organized
d. introduction and conclusion are powerful and effective
e. presenter answers questions well
f. presenter dressed appropriately

TODO: go back to the proposal
TODO: overarching lessons
TODO: improve pun
TODO: make the histogram from the data (googer?)
The cache class is the thing that models the cache, so it makes sense that it would be the longest file out of all of them.  And it is, but only by literally 10 lines of code

The test program is a program written to time things and to interface with the program that interfaces with the cache program.  Complicated, right?  It writes random lines of numbers to a file, whereupon another program reads those numbers and tells the model cache what to do with them.

*get image of output file, or if I really need to fill time, pull it up*
*random or sequential???*

But why am I timing and modeling in the first place?

It's annoying to do something and have it take forever, for not much reward :(







Largest lesson learned today
Biggest challenge faced today
An unexpected experience
A problem you solved & how it was solved
A failure that occurred and your response to it


characterize program, analyze
there is great practical usage for this area

// all miss experiment
// cache model -- hits * hit + miss * miss penalty
//       2 levels of cache???
// AND SEND IT




Day 1:
6

Day 2:
4

Day 3:
7 1/4

Day 4:
7.5

Day 5:
6.5

Day 6:
7.5

Day 7:
7.75

Day 8:
7.5

Day 9: (Sunday)
4

Day 10:
7.5

Day 11:
3

(65.5)

nmru, lru?, test random array addresses, timing
